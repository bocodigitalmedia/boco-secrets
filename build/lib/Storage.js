// Generated by CoffeeScript 1.11.1
(function() {
  var Dependencies, configure,
    hasProp = {}.hasOwnProperty,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Dependencies = (function() {
    Dependencies.prototype.FileSystem = null;

    Dependencies.prototype.Buffer = null;

    Dependencies.prototype.Error = null;

    function Dependencies(props) {
      var key, val;
      for (key in props) {
        if (!hasProp.call(props, key)) continue;
        val = props[key];
        this[key] = val;
      }
      if (typeof Buffer !== 'undefined') {
        if (this.Buffer == null) {
          this.Buffer = Buffer;
        }
      }
      if (typeof Error !== 'undefined') {
        if (this.Error == null) {
          this.Error = Error;
        }
      }
      if (typeof require === 'function') {
        if (this.FileSystem == null) {
          this.FileSystem = require('fs');
        }
      }
    }

    return Dependencies;

  })();

  configure = function(props) {
    var Buffer, Error, Exception, FileSystem, NotImplemented, dependencies, ref;
    ref = dependencies = new Dependencies(props), FileSystem = ref.FileSystem, Buffer = ref.Buffer, Error = ref.Error;
    Exception = (function(superClass) {
      extend(Exception, superClass);

      Exception.prototype.payload = null;

      function Exception(payload) {
        this.name = this.constructor.name;
        this.message = this.constructor.getMessage(payload);
        this.payload = payload;
        if (typeof Error.captureStackTrace === 'function') {
          Error.captureStackTrace(this, this.constructor);
        }
      }

      return Exception;

    })(Error);
    NotImplemented = (function(superClass) {
      extend(NotImplemented, superClass);

      function NotImplemented() {
        return NotImplemented.__super__.constructor.apply(this, arguments);
      }

      NotImplemented.getMessage = function(payload) {
        return "Not implemented.";
      };

      return NotImplemented;

    })(Exception);
    return {
      configure: configure,
      dependencies: dependencies,
      Dependencies: Dependencies,
      Exception: Exception,
      NotImplemented: NotImplemented,
      BufferStorage: BufferStorage,
      FileBufferStorage: FileBufferStorage,
      MemoryBufferStorage: MemoryBufferStorage
    };
  };

  module.exports = configure();

}).call(this);

//# sourceMappingURL=Storage.js.map
